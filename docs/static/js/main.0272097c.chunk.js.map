{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","handleSubmit","type","value","onChange","target","handleInput","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGrid","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"2MAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAkBvC,OACI,sBAAMC,SAAW,SAACC,GAAD,OAXA,SAACA,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,KAMMO,CAAaL,IAArC,SACI,uBACIM,KAAK,OACLC,MAAQV,EACRW,SAAW,SAACR,GAAD,OAnBH,SAACA,GACjBF,EAAeE,EAAES,OAAOF,OAkBEG,CAAYV,S,QCd/BW,EAVK,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAE1B,OACI,sBAAKC,UAAU,oCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAKA,Q,uBCWFK,EAjBF,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAENN,EAFM,iDAE2CO,UAAWF,GAFtD,+DAGOG,MAAOR,GAHd,cAGNS,EAHM,gBAIWA,EAAKC,OAJhB,uBAIJC,EAJI,EAIJA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAKc,EAAIE,OAAOC,iBAAiBjB,QAV7B,kBAcLY,GAdK,4CAAH,sDC2BEM,EAzBM,SAAEb,GAAe,IAAD,EAEPtB,mBAAS,CAC/B4B,KAAM,GACNQ,SAAS,IAJoB,mBAE1BC,EAF0B,KAEnBC,EAFmB,KAsBjC,OAfAC,qBAAW,WAEPlB,EAASC,GACJkB,MAAM,SAAAC,GAECH,EAAS,CACLV,KAAMa,EACNL,SAAS,SAG1B,CAACd,IAKGe,GCKIK,EA1BC,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,EAEJa,EAAcb,GAAhCM,EAFsB,EAEtBA,KAAMQ,EAFgB,EAEhBA,QAEd,OACI,qCACI,oBAAIlB,UAAU,oCAAd,SAAoDI,IAElDc,GAAW,mBAAGlB,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQU,EAAKE,KAAK,SAAAC,GACN,OACQ,cAAC,EAAD,eAESA,GADCA,EAAIC,aCgB/BW,EA/BM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,cAFvB,mBAEhB4C,EAFgB,KAEJ7C,EAFI,KASvB,OACI,qCACI,gDACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ6C,EAAWd,KAAK,SAAAR,GACZ,OACC,cAAC,EAAD,CAEGA,SAAUA,GADJA,YClB5BuB,EAAUC,SAASC,cAAc,QAEvCC,IAASC,OAAQ,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.0272097c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInput = (e) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2){\n            setCategories( cats => [inputValue, ...cats] );\n            setInputValue('');\n        }\n        \n    }\n    \n    return (\n        <form onSubmit={ (e) => handleSubmit(e) }>\n            <input\n                type='text'\n                value={ inputValue }\n                onChange={ (e) => handleInput(e) }\n            />\n        </form>     \n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory;","import React from 'react';\n\nconst GifGridItem = ({ title, url}) => {\n\n    return (\n        <div className=\"animate__animated animate__bounce\">\n            <img src={url} alt={title} />\n            <p>{ title }</p>\n        </div>\n    )\n}\n\nexport default GifGridItem;","\nconst getGifs = async ( category ) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=5Pmn9Ysz35lTLvFVPs9hh9whwrW5pi3A`;\n    const resp = await fetch( url );\n    const { data } = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}\n\nexport default getGifs;","import {useState, useEffect} from 'react';\nimport getGifs from '../helpers/getGifs';\n\nconst useFetchGifs = ( category ) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n\n        getGifs( category )\n            .then( imgs => {\n                    \n                    setState({\n                        data: imgs,\n                        loading: false\n                    })\n            })\n    }, [category])\n\n    \n\n\n    return state;\n}\n\nexport default useFetchGifs;","import React from 'react';\nimport GifGridItem from './GifGridItem';\nimport useFetchGifs from '../hooks/useFetchGifs';\n\nconst GifGrid = ({ category }) => {\n\n    const { data, loading } = useFetchGifs( category );\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__bounce\">{ category }</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n            <div className=\"card-grid\">\n                {\n                    data.map( img => {\n                        return (\n                                <GifGridItem \n                                    key={ img.id }\n                                    { ...img }\n                                />\n                        )\n                    })\n                }\n            </div>\n        </>\n    )\n}\n\nexport default GifGrid;","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './components/GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['one punch']);\n\n   /* const handleAdd = () => {\n        //setCategories( [ 'hunterXhunter', ...categories] );\n        setCategories( cats => [...cats, 'hunterXhunter'] );\n    }*/\n\n    return (\n        <>\n            <h2> GifExpertApp </h2>\n            <AddCategory setCategories={ setCategories }/>\n            <hr />\n\n            <ol>\n                {\n                    categories.map( category => {\n                        return(\n                         <GifGrid \n                            key={ category }\n                            category={category}\n                        />\n                        )\n                    })\n                }\n            </ol>\n        </>\n    );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nconst divRoot = document.querySelector('#app');\n\nReactDOM.render( <GifExpertApp />, divRoot );\n\n\n\n"],"sourceRoot":""}